Please answer the below core-java Questions:

What is programing language?
A.  Programming language is a formal language that specifies a set of instructions that can be used to produce various
    kinds of output.

What jdk contains or composed of and define each components?
A.  Components of JDK:
    1. The Runtime Interpreter: The Java runtime interpreter (java) is a stand-alone version of the Java interpreter
    built into the HotJava browser. The runtime interpreter provides the support to run Java executable programs in
    compiled, bytecode format.
    2. The Compiler: The Java compiler (javac) is used to compile Java source code files into executable Java bytecode
    classes. In Java, source code files have the extension .java
    3. The Applet Viewer: The applet viewer is a tool that serves as a minimal test bed for final release Java applets.
    You can use the applet viewer to test your programs instead of having to wait for HotJava to support the final
    release of Java.
    4. The Debugger: Debugger does the job of debugging the a piece of code.
    5. The Class File Disassembler: Disassembles class files.
    6. The Header and Stub File Generator: Generates  header and source files that are needed to implement native
    methods.
    7. The Documentation Generator: Generates HTML pages of API documentation from Java source files.

What is IDE?
A.  An IDE stands Integrated Development Environment is a software suite that consolidates the basic tools developers
    need to write and test software. Typically, an IDE contains a code editor, a compiler or interpreter and a debugger
    that the developer accesses through a single graphical user interface (GUI).

What are the IDEs available in the market to support java?
A.   Eclipse, Intellij Idea, NetBeans, AndroidStudio, Enide Studio 2014, BlueJ, jEdit, jGRASP, JSource, JDeveloper, etc.

Explain the entire java life cycle.
A.  Programmer use any text editor to create high level Java text file.This file is saved as a .java file on the disk.
    Then compile this text file using the Java compiler, which result in a .classfile being created on the disk.
    The .class file contains the bytecodes.

What is class?
A.  Class is the blueprint of objects that describes the behavior of that object.

What is object?
A.  An object is an instance of a class.

What is the entry point of an application?
A.  The main method.

Why main is static?
A.  The  main() method is  static  in nature, which  means that this method can be directly accessed/called, without
    having to instantiate or create object of class. Hence, main() method in every java program is declared static and
    it is automatically called to execute a Java program.

Which class is the superclass of all classes?
A.  Object class is the super class for all java classes.

What is difference between path and classpath variables?
A.  The main difference between path and classpath is that path is an environment variable which is used to locate JDK
    binaries like "java" or "javac" command used to run java program and compile java source file.
    On the other hand, classpath, is an environment variable is used by System or Application ClassLoader to locate and
    load compile Java bytecodes stored in the .class file

What is the difference between an Interface and Abstract class?
A.  A class that contains one or more abstract methods , and therefore can never be instantiated. Abstract classes are
    defined so that other classes can extend them and make them concrete by implementing the abstract methods.
    An interface in the Java programming language is an abstract type that is used to specify a behaviour that classes
    must implement.
    Interfaces are declared using the interface keyword, and may only contain method signature and constant declarations
    (variable declarations that are declared to be both static and final).

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
A. No we can not create object in Interface and Abstract class. Interface contains methods to be implemented, in
   abstract class we can implement some of them and can create more new methods as required keeping at least one
   abstract method. later abstract class can be extended and create and concrete class where there will be no abstract
   methods.

What is Access Specifier?
A.  Access Specifier is to determine the visibility of methods and variables. What is OOP ? Define each feature of java
    OOP.

What is OOP ? Define each feature of java OOP.
A. OOP. stands for "Object-Oriented Programming." Refers to a programming methodology based on objects, instead of just
   functions and procedures. These objects are organized into classes, which allow individual objects to be group
   together.
     Features of java OOP:
     1. Encapsulation
     2. Inheritance
     3. Polymorphism
     4. Abstraction

     1. Encapsulation: Encapsulation means data hiding. By doing encapsulation data can only be be accessed by public
        methods.  There are various way to hide the data. By making a method, variable private access limits to the
        class user. By using getter and setter method private data can be accessed, hiding implementation of methods and
        data from user is called encapsulation. from the users. It improves maintainability and flexibility and
        re-usability. The fields can be made read-only User would not be knowing what is going on behind the scene. They
        would only be knowing that to update a field call set method and to read a field call get method but what these
        set and get methods are doing is purely hidden from them.

     2. Inheritance: Inheritance refers to a feature of Java programming that lets you create classes that are derived
        from other classes. A class that's based on another class inherits the other class. The class that is inherited
        is the parent class, the base class, or the superclass.

     3. Polymorphism: Polymorphism is the ability of an object to take on many forms. The most common use of
        polymorphism in OOP occurs when a parent class reference is used to refer to a child class object. Any Java
        object that can pass more than one IS-A test is considered to be polymorphic. Polymorphism in Java has two
        types:
      a. Compile time polymorphism (static binding):It happens during compile time.
         Example: Method overloading is an example of static polymorphism,
      b. Runtime polymorphism (dynamic binding): It happens during run time.
         Example: Method overriding is an example of dynamic polymorphism.

     4. Abstraction: Abstraction in Java or Object oriented programming is a way to segregate implementation from an
        interface and one of the five fundamentals along with Encapsulation, Inheritance, Polymorphism, Class, and Object.
        Abstraction in Java is achieved by  using interface and abstract class in Java. An interface or abstract class
        is something which is not concrete , something which is incomplete. In order to use interface or abstract class,
        we need to extend and implement an abstract method with concrete behavior.

What is Java Package and which package is imported by default?
A.  A package is a namespace that organizes a set of related classes and interfaces. java.lang package is imported by
    default, no need to explicitly import it. Classes in the java.lang package do not need to be imported
    (the compiler acts like they are always imported).

What is API? Name list of API that you have used so far.
A.  An application program interface (API) is a set of routines, protocols, and tools for building software applications.
    Basically, an API specifies how software components should interact. Additionally, APIs are used when programming
    graphical user interface (GUI) components. A good API makes it easier to develop a program by providing all the
    building blocks. A programmer then puts the blocks together.

Does java support multiple inheritance, explain why or why not?
A.  No Java doesnâ€™t allow multiple inheritance.

What is method overloading and when it happens?
A.  When same method takes different signature it is called method overloading it happen within class.

Explain exceptions in java and how to handle it.
A. The term exception is shorthand for the phrase "exceptional event."An exception is an event, which occurs during the
   execution of a program, that disrupts the normal flow of the program's instructions.

What is static keyword in java? How it has been used in variables and methods?
A.  The he static keyword denotes that a member variable, or method, can be accessed without requiring an instantiation
    of the class to which it belongswhen static key word is used with a method that method can be called without creating
    a object.

What is final and how it has been used variables and methods?
A.  A final class cannot be subclassed. A final variable can only be initialized once. A final method cannot be
    overridden by subclasses.

What is final, finally and finalize?
A.  Final: Final variables are nothing but constants. We cannot change the value of a final variable once it is initialized.
    A final method cannot be overridden. Which means even though a sub class can call the final method of parent class
    without any issues but it cannot override it.
    Finally: Finally key word used to execute finally block when the try and catch block exits which ensures that the
    finally block is executed even if an unexpected exception occurs.
    Finalize(): Called by the garbage collector on an object when garbage collection determines that there are no more
    references to the object.

What is a constructor?
A.  Constructor is being used to instantiate a object by using new operator. It is an instance method with the same name
    of their class.

Can we have multiple constructors in a class?
A.  Yes.

If we don't have a constructor declared, what is called during the object creation?
A.  create an object from a class.

What is "this" keyword in java?
A.  this key word represents instance of the class. this can be used to access class methods and variables.

What is "super" keyword in java? How many possible way can you use?
A.  super key word used for accessing the members of the super class by the extended class.

What is JVM stand for?
A. Java Virtual Machine

Is JVM platform independent?
A.  The JVM must be platform dependent to allow your Java to run on the specific platform. A JVM for Windows will
    translate your Java into different system calls than a JVM for OS X. No, JVMs are not platform independent. In fact
    they are platform specific run time environment provided by the vendor.

What version of java are you using?
A.  java version "10.0.2" 2018-07-17
    Java(TM) SE Runtime Environment 18.3 (build 10.0.2+13)
    Java HotSpot(TM) 64-Bit Server VM 18.3 (build 10.0.2+13, mixed mode)

What is JAR stand for?
A.  Java Archive is a platform independent file format that holds many files into one. Multiple applets written in the
    Java Programming language and their components like .class files, images, sounds and other resource files can be
    bundled in a JAR file and downloadable in a single HTTP transaction. It supports file compression and digital
    signatures.

What is the difference between JDK and JVM?
A.  JDK is an acronym for Java Development Kit.It physically exists.It contains JRE + development tools.
    JVM (Java Virtual Machine) is an abstract machine. It is a specification that provides runtime environment in which
    java bytecode can be executed.

What is the difference between JVM and JRE?
A.  JVM (Java Virtual Machine) is an abstract machine. It is a specification that provides runtime environment in which
    java bytecode can be executed.
    JRE is an acronym for Java Runtime Environment.It is used to provide runtime environment.It is the implementation
    of JVM.It physically exists.It contains set of libraries + other files that JVM uses at runtime.

What is compile time and run time?
A. Java compile the .java file to .class file, this stage is called compile time. java loader loads the .class file in
    JVM and JVM executes the application. This execution time of a application is called run time.

What is heap?
A.  The heap is the run-time data area from which memory for all class instances and arrays is allocated. Heap is the
    place where all objects stays during run time. It is part of RAM.

How java manage it's memory?
A.  All the primitive variables and reference variable stays in stack. Heap contains the objects. Main methods executes
    on stack. during the process of execution when a object lost his reference variable which is being erased from the
    stack after completion of execution is waits for the Java automatic garbage collector, and object without no
    reference variable being removed from heap by garbage collector.

What is the difference between String, StringBuffer and StringBuilder?
A.  String is immutable, if you try to alter their values, another object getscreated, whereas StringBuffer and
    StringBuilder are mutable so they can change their values.StringBuffer methods are synchronized while StringBuilder
    methods are non-synchronized, it means that for thread-safe operations you must choose StringBuffer class instead
    of StringBuilder.

What is Singleton class?
A.  The purpose of singleton is to control object creation by keeping private constructor. Singleton pattern helps us to
    keep only one instance of a class at any time.We can make constructor as private. So that user can not create an
    object from outside of the class.

What is Serialization and Deserialization?
A.  Serialization: It is a process of converting an object into a sequence of bytes which can be persisted to a disk or
    database or can be sent through streams.
    Deserialization: The reverse process of creating object from sequence of bytes is called deserialization.

When to use transient variable in java?
A.  If user wants to skip any variable from Serialization and Deserialization on that time we can use transient variable.

Difference between while and do..while loop?
A.  Only difference between these two loops is that, in while loops, test expression is checked at first but, in
    do...while loop code is executed at first then the condition is checked. So, the code are executed at least once in
    do...while loops.

What is Enum?
A.  Enum is a special Java type used to define collections of constants.

What is Iterator?
A.  An iterator is an Interface. Iterator takes the place of Enumeration in the Java Collections Framework.

Which one will take more memory, an int or Integer?
A.  An int shall take 4 bytes and Integer shall take about 16 bytes space in heap.Integer are wrapper class which has
    more overhead compared to primitive type. The memory space consumption by object depends upon JVM during run time
    environment. For a object this space varies.

Why is String Immutable in Java?
A.  Security: parameters are typically represented as String in network connections, database connection urls,
    username/password etc. If it were mutable, these parameters could be easily changed.
    Synchronization and concurrency: making String immutable automatically makes them thread safe thereby solving the
    synchronization issues.
    Caching: when compiler optimizes your String objects, it sees that if two objects have same value
    (a="test", and b="test") and thus you need only one string object (for both a and b, these two will point to the
    same object).
    Class loading: String is used as arguments for class loading. If mutable, it could result in wrong class being loaded
    (because mutable objects change their state).

What is constructor chaining in Java?
A.  Constructor chaining is the process of calling one constructor from another constructor with respect to current
    object. Constructor chaining can be done in two ways:
    Within same class: It can be done using this() keyword for constructors in same class
    From base class: by using super() keyword to call constructor from the base class.
    Constructor chaining occurs through inheritance.

The difference between Serial and Parallel Garbage Collector?
A.  The serial collector uses a single thread to perform all garbage collection work, which is more efficient because of
    no communication overhead between threads. It is best suited to single processor machines.
    Parallel collctor performs minor collections in parallel, which can significantly reduce garbage collection. It is
    intended for applications with medium-size to large sized data sets that are run on multiprocessor and multi
    threaded hardware.

What is JIT stands for?
A.  The Just-In-Time (JIT) compiler is a component of the Javaâ„¢ Runtime Environment that improves the performance of
    Java applications at run time.
    The JIT compiler helps improve the performance of Java programs by compiling bytecodes into native machine code
    at run time. The JIT compiler is enabled by default, and is activated when a Java method is called.

Explain Java Heap space and Garbage collection?
A.  Heap space: At run-time the Java instances are stored in the heap memory area. When an object is not referenced
    anymore it becomes eligible for removal from heap memory.During garbage collection process, those objects are
    removed from heap memory and the space is reclaimed.
    Heap memory has three major areas
     1. Young Generation
        a. Eden Space (any instance enters the runtime memory area through eden)
        b. S0 Survivor Space (older instances moved from eden to S0)
        c. S1 Survivor Space (older instances moved from S0 to S1)
     2. Old Generation (instances promoted from S1 to tenured)
     3. Permanent Generation (contains meta information like class, method detail)
    Garbage Connection:Java garbage collection is an automatic process to manage the runtime memory used by programs.
    Garbage connection of JAVA application is done by Garbage collector.
    A garbage collector performs automatic dynamic memory management through the following operations:
     1. It allocates from and gives back memory to the operating system.
     2. Allocate memory to the application as it requests it.
     3. Determines which parts of that memory is still in use by the application.
     4. Reclaims the unused memory for reuse by the application. An object is considered garbage and its memory can be
        reused by the VM when it can no longer be reached from any reference of any other live object in the running
        program.

Can you guarantee the garbage collection process?
A.  No it is not guaranteed process. Reason is as follows:
    Being an automatic process, programmers need not initiate the garbage collection process explicitly in the code.
    System.gc() and Runtime.gc() are hooks to request the JVM to initiate the garbage collection process.

    Though this request mechanism provides an opportunity for the programmer to initiate the process but the onus
    is on the JVM. It can choose to reject the request and so it is not guaranteed that these calls will do the
    garbage collection. This decision is taken by the JVM based on the eden space availability in heap memory.
    The JVM specification leaves this choice to the implementation and so these details are implementation specific.
    Undoubtedly we know that the garbage collection process cannot be forced.

What is the difference between stack and heap in Java?
A.  Heap and Stack are part of JVM but they are used for different purposes. Differences are as follows:
    1. Size: Heap space in Java is much bigger than the Stack memory.
    2. Resizing: JVM allows to resize both heap and stack, but need to use different JVM flags for that.
    3. Usage: Heap memory is used to store objects, no mater where u created that object. Stack memory is used to store
       primitive variables and reference variables, method frames and call stack.
    4. Visibility: Heap memory is shared by all threads hence it is also known as the main memory but stack memory is
       local to threads and local variable created there was not visible to others.
    5. Order: Heap is a large memory area where objects can be created and stored in any order but Stack memory is
       structured as Stack data structure i.e. LIFO where method calls are stored as last in first out order.
    6. Error Type: When heap and stack memory are filled different error are being generated.

What is reflection in java and why is it useful?
A.  Reflection is a feature in the Java programming language. It allows an executing Java program to examine or
    "introspect" upon itself, and manipulate internal properties of the program.
    Java Reflection is quite powerful and can be very useful. Java Reflection makes it possible to inspect classes,
    interfaces, fields and methods at runtime, without knowing the names of the classes, methods etc.

what is multithreading in java?
A.  Multithreading in java is a process of executing multiple threads simultaneously. A thread is a lightweight
    sub-process, the smallest unit of processing. Multiprocessing and multithreading, both are used to achieve
    multitasking.

What is the use of synchronization in Java?
A.  Synchronized keyword in Java is used to provide mutually exclusive access to a shared resource with multiple threads
    in Java. Synchronization in Java guarantees that no two threads can execute a synchronized method which requires the
    same lock simultaneously or concurrently.

What is Framework?
A.  Frameworks are large bodies (usually many classes) of prewritten code to which you add your own code to solve a
    problem in a specific domain.

What are the testing Framework available in java?
A.  JUnit, TestNG  etc.

Difference between jUnit and testNG?
A.  Major difference in TestNG and JUnit test frameworks is their scope. TestNG is more advance in parameterize testing,
    dependency testing and suite testing (Grouping concept). TestNG is meant for high-level testing and complex
    integration test.

What are the dependencies for this project?
A.  1.mongo-java-driver-3.4.0.jar
    2.mysql-connector-java-5.1.41-bin.jar
    3.testng-6.8.7.jar

what is dependency injection in java?
A.  The general concept behind dependency injection is called Inversion of Control. According to this concept a class
    should not configure its dependencies statically but should be configured from the outside. A Java class has a
    dependency on another class, if it uses an instance of this class. We call this a _class dependency. For example, a
    class which accesses a logger service has a dependency on this service class.

What is static binding and dynamic binding?
A.  Static binding in Java occurs during compile time while dynamic binding occurs during runtime. private , final and
    static methods and variables use static binding and are bonded by compiler while virtual methods are bonded during
    runtime based upon runtime object.









